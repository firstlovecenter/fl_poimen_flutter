name: Deploy Flutter Web to S3 & CloudFront

on:
  push:
    branches:
      - main # Adjust to your deployment branch
    # paths:
    #   - 'lib/**'
    #   - 'web/**'
    #   - 'pubspec.yaml'
    #   - 'pubspec.lock'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0' # Adjust to your Flutter version
          channel: 'stable'

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install Dependencies
        run: flutter pub get

      - name: Retrieve and Export Secrets from AWS Secrets Manager
        run: |
          # Get secrets JSON and create temporary file to process
          aws secretsmanager get-secret-value --secret-id ${{ secrets.AWS_SECRETS_COLLECTION_NAME }} --query SecretString --output text > secrets.json

          # Use jq to properly handle multi-line values with escaping
          jq -r 'to_entries[] | "\(.key)<<EOF
          \(.value)
          EOF"' secrets.json > env_file

          # Add the env file to GITHUB_ENV
          cat env_file >> $GITHUB_ENV

          # Clean up
          rm secrets.json env_file
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build Flutter Web
        run: |
          flutter build web --release \
            --dart-define=API_URL=${{ env.API_URL }} \
            --dart-define=ENVIRONMENT=${{ env.ENVIRONMENT }} \
            --web-renderer canvaskit
        env:
          # Add all your required environment variables here
          API_URL: ${{ env.API_URL }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          # Add any other environment variables your app needs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./build/web s3://${{ secrets.S3_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: ':rocket: Successfully deployed Poimen Flutter Web app to S3 and invalidated CloudFront cache'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: success()
